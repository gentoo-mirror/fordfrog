# HG changeset patch
# User David Konecny <dkonecny@netbeans.org>
# Date 1297733655 -46800
# Node ID 77ab1bc9a3694538d26a2eccfb448dad541a45fb
# Parent  01bc40efffe1705ba9d7c1dbc3249e7f407cb0fc
#195453 - NullPointerException at org.netbeans.modules.maven.j2ee.ejb.EjbRunCustomizerPanel.applyChanges

diff --git a/maven.j2ee/src/org/netbeans/modules/maven/j2ee/J2eeLookupProvider.java b/maven.j2ee/src/org/netbeans/modules/maven/j2ee/J2eeLookupProvider.java
--- a/maven.j2ee/src/org/netbeans/modules/maven/j2ee/J2eeLookupProvider.java
+++ b/maven.j2ee/src/org/netbeans/modules/maven/j2ee/J2eeLookupProvider.java
@@ -91,7 +91,9 @@
         ic.add(new ExecutionChecker(project));
         ic.add(new SessionContent());
         Provider prov = new Provider(project, ic);
-        ic.add(new POHImpl(project, prov));
+        POHImpl p = new POHImpl(project, prov);
+        ic.add(p);
+        ic.add(new POHImpl.Hook(p));
         ic.add(new ContainerCPModifierImpl(project));
         return prov;
     }
diff --git a/maven.j2ee/src/org/netbeans/modules/maven/j2ee/POHImpl.java b/maven.j2ee/src/org/netbeans/modules/maven/j2ee/POHImpl.java
--- a/maven.j2ee/src/org/netbeans/modules/maven/j2ee/POHImpl.java
+++ b/maven.j2ee/src/org/netbeans/modules/maven/j2ee/POHImpl.java
@@ -80,11 +80,7 @@
 import org.openide.util.Exceptions;
 import org.openide.util.NbBundle;
 
-/**
- *
- * @author mkleint
- */
-public class POHImpl extends ProjectOpenedHook {
+public class POHImpl {
     private final Project project;
     private J2eeLookupProvider.Provider provider;
     private PropertyChangeListener refreshListener;
@@ -102,6 +98,7 @@
     
     public void hackModuleServerChange() {
         ProjectManager.mutex().postReadRequest(new Runnable() {
+            @Override
             public void run() {
                 refreshAppServerAssignment();
             }
@@ -112,12 +109,13 @@
         this.contextPath = path;
     }
     
-    protected void projectOpened() {
+    private void projectOpened() {
         refreshAppServerAssignment();
         if (refreshListener == null) {
             //#121148 when the user edits the file we need to reset the server instance
             NbMavenProject watcher = project.getLookup().lookup(NbMavenProject.class);
             refreshListener = new PropertyChangeListener() {
+                @Override
                 public void propertyChange(PropertyChangeEvent evt) {
                     if (NbMavenProject.PROP_PROJECT.equals(evt.getPropertyName())) {
                         hackModuleServerChange();
@@ -163,7 +161,7 @@
         USG_LOGGER.log(record);
     }
 
-    protected synchronized void refreshAppServerAssignment() {
+    private synchronized void refreshAppServerAssignment() {
         provider.hackModuleServerChange();
 
         String[] ids = obtainServerIds(project);
@@ -224,7 +222,7 @@
         }
     }
 
-    protected void projectClosed() {
+    private void projectClosed() {
         //is null check necessary?
         if (refreshListener != null) {
             NbMavenProject watcher = project.getLookup().lookup(NbMavenProject.class);
@@ -240,7 +238,7 @@
             try {
                 copyOnSave.cleanup();
             } catch (FileStateInvalidException ex) {
-                ex.printStackTrace();
+                Exceptions.printStackTrace(ex);
             }
         }
     }
@@ -302,6 +300,7 @@
             putValue(Action.NAME, NbBundle.getMessage(POHImpl.class, "TXT_Add_Server"));
         }
         
+        @Override
         public void actionPerformed(ActionEvent e) {
             String newOne = ServerManager.showAddServerInstanceWizard();
             String serverType = null;
@@ -363,4 +362,24 @@
             });
         }
     }
+    
+    public static class Hook extends ProjectOpenedHook {
+
+        private POHImpl poh;
+
+        public Hook(POHImpl poh) {
+            this.poh = poh;
+        }
+        
+        @Override
+        protected void projectOpened() {
+            poh.projectOpened();
+        }
+
+        @Override
+        protected void projectClosed() {
+            poh.projectClosed();
+        }
+        
+    }
 }

